import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jetbrains.kotlin.gradle.tasks.KotlinTest

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
}

subprojects { subProject ->
    plugins.withId('org.jetbrains.kotlin.jvm') {
        version '1.6.21'
    }
    // include java project configuration
    apply from: "../../java-library.gradle"
    subProject.tasks.fatJar.dependsOn(project(':libelektra').tasks.jar)

    // include project dependencies
    apply from: '../dependencies.gradle'

    version project.version

    repositories {
        subProject.repositories.add(mavenCentral())
    }
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.21"
    }

    subProject.tasks.withType(KotlinCompile.class).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    subProject.tasks.withType(KotlinTest.class).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileKotlin.kotlinOptions.jvmTarget = "1.8"
    compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

    tasks.withType(Zip).configureEach {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}

repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

task "printJarPaths" {
    doLast {
        for (p in subprojects) {
            def t = p.tasks.findByPath("jar")
            if (t != null) {
                t.outputs.files.files.forEach(f -> {
                    println(rootDir.toPath().relativize(f.toPath()))
                })
            }
        }
    }
}

